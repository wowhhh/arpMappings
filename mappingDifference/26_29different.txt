Permission:android.permission.SEND_SMS
android.telephony.TelephonyManager.sendVisualVoicemailSms(java.lang.String,int,java.lang.String,android.app.PendingIntent)void
android.telephony.VisualVoicemailService.sendVisualVoicemailSms(android.content.Context,android.telecom.PhoneAccountHandle,java.lang.String,short,java.lang.String,android.app.PendingIntent)void
android.telephony.SmsManager.sendTextMessageWithoutPersisting(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)void

Permission:android.permission.ACCESS_FINE_LOCATION
android.telephony.TelephonyManager.requestCellInfoUpdate(android.os.WorkSource,java.util.concurrent.Executor,android.telephony.TelephonyManager.CellInfoCallback)void
android.net.wifi.p2p.WifiP2pManager.requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)void
android.net.wifi.WifiManager.getPrivilegedConfiguredNetworks()java.util.List<android.net.wifi.WifiConfiguration>
android.telephony.TelephonyManager.requestCellInfoUpdate(java.util.concurrent.Executor,android.telephony.TelephonyManager.CellInfoCallback)void
android.net.wifi.p2p.WifiP2pManager.createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.telephony.TelephonyManager.getAllCellInfo()java.util.List<android.telephony.CellInfo>
android.net.wifi.WifiManager.getConfiguredNetworks()java.util.List<android.net.wifi.WifiConfiguration>
android.telephony.TelephonyManager.requestNetworkScan(android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager.NetworkScanCallback)android.telephony.NetworkScan
android.telephony.TelephonyManager.requestNetworkScan(android.telephony.NetworkScanRequest,android.telephony.TelephonyScanManager.NetworkScanCallback)android.telephony.NetworkScan
android.net.wifi.p2p.WifiP2pManager.discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.requestDeviceInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DeviceInfoListener)void
android.net.wifi.p2p.WifiP2pManager.connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.p2p.WifiP2pManager.createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)void
android.net.wifi.rtt.WifiRttManager.startRanging(android.net.wifi.rtt.RangingRequest,java.util.concurrent.Executor,android.net.wifi.rtt.RangingResultCallback)void
android.location.LocationManager.injectLocation(android.location.Location)boolean
android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)void
android.net.wifi.rtt.WifiRttManager.startRanging(android.os.WorkSource,android.net.wifi.rtt.RangingRequest,java.util.concurrent.Executor,android.net.wifi.rtt.RangingResultCallback)void
android.net.wifi.p2p.WifiP2pManager.requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)void
android.net.wifi.p2p.WifiP2pManager.addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)void

Permission:android.permission.ACCESS_COARSE_LOCATION
android.telephony.TelephonyScanManager.requestNetworkScan(int,android.telephony.NetworkScanRequest,java.util.concurrent.Executor,android.telephony.TelephonyScanManager.NetworkScanCallback,java.lang.String)android.telephony.NetworkScan
android.location.LocationManager.addProximityAlert(double,double,float,long,android.app.PendingIntent)void
android.telephony.TelephonyManager.getServiceState()android.telephony.ServiceState

Permission:android.permission.CAMERA
android.hardware.camera2.CameraManager.openCamera(java.lang.String,java.util.concurrent.Executor,android.hardware.camera2.CameraDevice.StateCallback)void

Permission:android.permission.READ_EXTERNAL_STORAGE
android.app.WallpaperManager.peekFastDrawable()android.graphics.drawable.Drawable
android.app.WallpaperManager.getWallpaperFile(int)android.os.ParcelFileDescriptor
android.app.WallpaperManager.getFastDrawable()android.graphics.drawable.Drawable

Permission:android.permission.ANSWER_PHONE_CALLS
android.telecom.TelecomManager.endCall()boolean

Permission:android.permission.READ_PHONE_STATE
android.telephony.SubscriptionManager.isActiveSubscriptionId(int)boolean
android.telecom.TelecomManager.getUserSelectedOutgoingPhoneAccount()android.telecom.PhoneAccountHandle
android.telephony.SubscriptionManager.getActiveSubscriptionInfoForSimSlotIndex(int)android.telephony.SubscriptionInfo
android.telephony.CarrierConfigManager.getConfig()android.os.PersistableBundle
android.telephony.TelephonyManager.isDataRoamingEnabled()boolean
android.telephony.SubscriptionManager.getActiveSubscriptionInfo(int)android.telephony.SubscriptionInfo
android.telephony.TelephonyManager.isManualNetworkSelectionAllowed()boolean
android.telephony.TelephonyManager.isMultiSimSupported()int
android.telephony.SubscriptionManager.getSubscriptionsInGroup(android.os.ParcelUuid)java.util.List<android.telephony.SubscriptionInfo>
android.telephony.TelephonyManager.getEmergencyNumberList()java.util.Map<java.lang.Integer, java.util.List<android.telephony.emergency.EmergencyNumber>>
android.telephony.TelephonyManager.getCdmaRoamingMode()int
android.telephony.SubscriptionManager.getOpportunisticSubscriptions()java.util.List<android.telephony.SubscriptionInfo>
android.telephony.TelephonyManager.getEmergencyNumberList(int)java.util.Map<java.lang.Integer, java.util.List<android.telephony.emergency.EmergencyNumber>>
android.os.UserManager.getUserSwitchability()int
android.telephony.TelephonyManager.getNai()java.lang.String
android.telephony.SubscriptionManager.getActiveSubscriptionInfoList()java.util.List<android.telephony.SubscriptionInfo>
android.telephony.TelephonyManager.getRadioPowerState()int
android.telephony.TelephonyManager.getNetworkSelectionMode()int
android.telephony.SmsManager.checkSmsShortCodeDestination(java.lang.String,java.lang.String)int
android.telephony.TelephonyManager.getNumberOfModemsWithSimultaneousDataConnections()int
android.telephony.TelephonyManager.doesSwitchMultiSimConfigTriggerReboot()boolean
android.telephony.CarrierConfigManager.getConfigForSubId(int)android.os.PersistableBundle
android.telephony.TelephonyManager.getPreferredOpportunisticDataSubscription()int
android.telephony.SubscriptionManager.getActiveSubscriptionInfoCount()int

